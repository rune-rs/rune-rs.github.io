searchState.loadedDescShard("bstr", 0, "A byte string library.\nA short-hand constructor for building a <code>&amp;[u8]</code>.\nA wrapper for <code>&amp;[u8]</code> that provides convenient string …\nA trait that extends <code>&amp;[u8]</code> with string oriented methods.\nAn iterator over the bytes in a byte string.\nAn iterator over Unicode scalar values in a byte string …\nAn iterator over Unicode scalar values in a byte string.\nAn iterator of <code>char</code> values that represent an escaping of …\nAn iterator over fields in the byte string, separated by a …\nAn iterator over non-overlapping substring matches.\nAn iterator over non-overlapping substring matches in …\nA single substring searcher fixed to a particular needle.\nA single substring reverse searcher fixed to a particular …\nAn iterator over all lines in a byte string, without their …\nAn iterator over all lines in a byte string, including …\nAn iterator over substrings in a byte string, split by a …\nAn iterator over at most <code>n</code> substrings in a byte string, …\nAn iterator over at most <code>n</code> substrings in a byte string, …\nAn iterator over substrings in a byte string, split by a …\nA chunk of valid UTF-8, possibly followed by invalid UTF-8 …\nAn iterator over chunks of valid UTF-8 in a byte slice.\nAn error that occurs when UTF-8 decoding fails.\nReturn this byte slice as a <code>&amp;BStr</code>.\nReturn this byte slice as a <code>&amp;BStr</code>.\nReturn this byte slice as a <code>&amp;mut BStr</code>.\nReturn this byte slice as a <code>&amp;mut BStr</code>.\nViews the remaining underlying data as a subslice of the …\nReturn a copy of the rest of the underlying bytes without …\nReturn a copy of the rest of the underlying bytes without …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nReturns an iterator over the bytes in this byte string.\nReturns an iterator over the bytes in this byte string.\nReturns an iterator over the Unicode scalar values in this …\nReturns an iterator over the Unicode scalar values in this …\nReturns an iterator over the Unicode scalar values in this …\nReturns an iterator over the Unicode scalar values in this …\nReturns true if and only if this byte string contains the …\nReturns true if and only if this byte string contains the …\nUTF-8 decode a single Unicode scalar value from the end of …\nUTF-8 decode a single Unicode scalar value from the …\nReturns true if and only if this byte string has the given …\nReturns true if and only if this byte string has the given …\nReturns the total number of invalid UTF-8 bytes …\nEscapes this byte string into a sequence of <code>char</code> values.\nEscapes this byte string into a sequence of <code>char</code> values.\nReturns an iterator over the fields in a byte string, …\nReturns an iterator over the fields in a byte string, …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of this needle …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of any of the …\nReturns the index of the first occurrence of any of the …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of the given …\nReturns an iterator of the non-overlapping occurrences of …\nReturns an iterator of the non-overlapping occurrences of …\nReturns the index of the first non-ASCII byte in this byte …\nReturns the index of the first non-ASCII byte in this byte …\nReturns the index of the first occurrence of a byte that …\nReturns the index of the first occurrence of a byte that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns whether the invalid sequence might still become …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the (possibly empty) invalid UTF-8 bytes in this …\nReturns true if and only if every byte in this byte string …\nReturns true if and only if every byte in this byte string …\nReturns true if and only if the entire byte string is …\nReturns true if and only if the entire byte string is …\nReturns the last byte in this byte string, if it’s …\nReturns the last byte in this byte string, if it’s …\nAn iterator over all lines in a byte string, without their …\nAn iterator over all lines in a byte string, without their …\nAn iterator over all lines in a byte string, including …\nAn iterator over all lines in a byte string, including …\nConvert this byte string to its lowercase ASCII equivalent …\nConvert this byte string to its lowercase ASCII equivalent …\nConvert this byte string to its uppercase ASCII equivalent …\nConvert this byte string to its uppercase ASCII equivalent …\nReturns the needle that this finder searches for.\nReturns the needle that this finder searches for.\nDirectly creates a <code>BStr</code> slice from anything that can be …\nCreate a new finder for the given needle.\nCreate a new reverse finder for the given needle.\nReverse the bytes in this string, in place.\nReverse the bytes in this string, in place.\nReverse the codepoints in this string, in place.\nReverse the codepoints in this string, in place.\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of this needle in …\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of any of the …\nReturns the index of the last occurrence of any of the …\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of the given …\nReturns an iterator of the non-overlapping occurrences of …\nReturns an iterator of the non-overlapping occurrences of …\nReturns the index of the last occurrence of a byte that is …\nReturns the index of the last occurrence of a byte that is …\nSplit this byte string at the last occurrence of <code>splitter</code>.\nSplit this byte string at the last occurrence of <code>splitter</code>.\nReturns an iterator over substrings of this byte string, …\nReturns an iterator over substrings of this byte string, …\nReturns an iterator of at most <code>limit</code> substrings of this …\nReturns an iterator of at most <code>limit</code> substrings of this …\nSplit this byte string at the first occurrence of <code>splitter</code>.\nSplit this byte string at the first occurrence of <code>splitter</code>.\nReturns an iterator over substrings of this byte string, …\nReturns an iterator over substrings of this byte string, …\nReturns an iterator of at most <code>limit</code> substrings of this …\nReturns an iterator of at most <code>limit</code> substrings of this …\nReturns true if and only if this byte string has the given …\nReturns true if and only if this byte string has the given …\nSafely convert this byte string into a <code>&amp;str</code> if it’s …\nSafely convert this byte string into a <code>&amp;str</code> if it’s …\nUnsafely convert this byte string into a <code>&amp;str</code>, without …\nUnsafely convert this byte string into a <code>&amp;str</code>, without …\nReturn a byte string slice with trailing characters …\nReturn a byte string slice with trailing characters …\nReturn a byte string slice with leading characters …\nReturn a byte string slice with leading characters …\nReturn a byte string slice with leading and trailing …\nReturn a byte string slice with leading and trailing …\nIterate over chunks of valid UTF-8.\nIterate over chunks of valid UTF-8.\nReturns the (possibly empty) valid UTF-8 bytes in this …\nReturns the byte index of the position immediately …")